#if !canImport(ObjectiveC)
import XCTest

extension DocumentSwiftGenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentSwiftGenTests = [
        ("test_collectionViaOpenAPI", test_collectionViaOpenAPI),
        ("test_nullableSingleViaOpenAPI", test_nullableSingleViaOpenAPI),
        ("test_singleInclude1ViaOpenAPI", test_singleInclude1ViaOpenAPI),
        ("test_singleInclude2ViaOpenAPI", test_singleInclude2ViaOpenAPI),
        ("test_singleViaOpenAPI", test_singleViaOpenAPI),
        ("test_tmp", test_tmp),
    ]
}

extension ResourceObjectSwiftGenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ResourceObjectSwiftGenTests = [
        ("test_DirectConstruction", test_DirectConstruction),
        ("test_ViaOpenAPI", test_ViaOpenAPI),
    ]
}

extension SchemaSwiftTypeGenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SchemaSwiftTypeGenTests = [
        ("test_array_complex", test_array_complex),
        ("test_array_simple", test_array_simple),
        ("test_boolean", test_boolean),
        ("test_double", test_double),
        ("test_integer", test_integer),
        ("test_object", test_object),
        ("test_string", test_string),
    ]
}

extension StructureSwiftGenTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StructureSwiftGenTests = [
        ("test_complexObject_allRequired", test_complexObject_allRequired),
        ("test_conformances", test_conformances),
        ("test_nonObjects", test_nonObjects),
        ("test_simpleObject_allRequired", test_simpleObject_allRequired),
        ("test_simpleObject_optional", test_simpleObject_optional),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DocumentSwiftGenTests.__allTests__DocumentSwiftGenTests),
        testCase(ResourceObjectSwiftGenTests.__allTests__ResourceObjectSwiftGenTests),
        testCase(SchemaSwiftTypeGenTests.__allTests__SchemaSwiftTypeGenTests),
        testCase(StructureSwiftGenTests.__allTests__StructureSwiftGenTests),
    ]
}
#endif
